<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xdmd.IntranetEnvironment.extranetSubjectAcceptance.mapper.ExtranetAcceptApplyMapper">

    <!--<select id="queryAcceptApply" resultType="com.xdmd.environment.subjectAcceptance.pojo.CheckApply">-->
        <!--SELECT-->
        <!--id,-->
        <!--topic_name,-->
        <!--topic_number,-->
        <!--subject_undertaking_unit,-->
        <!--unit_nature,-->
        <!--project_leader,-->
        <!--project_leader_phone,-->
        <!--project_leader_mail,-->
        <!--postal_address,-->
        <!--agreement_start_time,-->
        <!--agreement_end_time,-->
        <!--application_acceptance_time,-->
        <!--application_acceptance_mode,-->
        <!--application_acceptance_place,-->
        <!--acceptance_contact,-->
        <!--acceptance_contact_phone,-->
        <!--main_content_situation,-->
        <!--submission_achievements_situation,-->
        <!--subject_undertaking_unit_opinion,-->
        <!--environmental_departments_opinion,-->
        <!--province_assessment_center_opinion,-->
        <!--competent_department_oinion,-->
        <!--submit_inventory-->
        <!--FROM-->
        <!--check_apply-->
        <!--<where>-->
            <!--<if test="topicName != null">-->
                <!--topic_name like CONCAT('%',#{topicName},'%')-->
            <!--</if>-->

            <!--<if test="projectLeader != null">-->
                <!--and project_leader like CONCAT('%',#{projectLeader},'%')-->
            <!--</if>-->
        <!--</where>-->
        <!--limit #{page},#{total}-->
    <!--</select>-->

    <select id="queryAllTotal" resultType="Integer">
        select count(*) from check_apply
        <where>
            <if test="topicName != null">
                topic_name like CONCAT('%',#{topicName},'%')
            </if>

            <if test="projectLeader != null">
                and project_leader like CONCAT('%',#{projectLeader},'%')
            </if>
        </where>
    </select>

    <insert id="uploadFile" useGeneratedKeys="true" keyProperty="id">
         insert into upload_file(
            id,
            upload_file_address,
            upload_file_name,
            upload_file_type,
            upload_suffix_name,
            file_size,
            create_time,
            create_author)
            values(
            #{uploadFile.id},
            #{uploadFile.uploadFileAddress},
            #{uploadFile.uploadFileName},
            #{uploadFile.uploadFileType},
            #{uploadFile.uploadSuffixName},
            #{uploadFile.fileSize},
            #{uploadFile.createTime},
            #{uploadFile.createAuthor}
            )
    </insert>

    <insert id="addAcceptApply" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO check_apply (
            id,
            topic_name,
            topic_number,
            subject_undertaking_unit_id,
            subject_undertaking_unit,
            unit_nature,
            project_leader,
            project_leader_phone,
            project_leader_mail,
            postal_address,
            agreement_start_time,
            agreement_end_time,
            application_acceptance_time,
            application_acceptance_mode,
            application_acceptance_place,
            acceptance_contact,
            acceptance_contact_phone,
            main_content_situation,
            submission_achievements_situation,
            subject_undertaking_unit_opinion,
            environmental_departments_opinion,
            province_assessment_center_opinion,
            competent_department_oinion,
            submit_inventory,
            acceptance_phase_id,
            create_time,
            create_author,
            application_url_id,
            is_outcome
        )VALUES
        (
          #{extranetCheckApply.id},
          #{extranetCheckApply.topicName},
          #{extranetCheckApply.topicNumber},
          #{extranetCheckApply.subjectUndertakingUnitId},
          #{extranetCheckApply.subjectUndertakingUnit},
          #{extranetCheckApply.unitNature},
          #{extranetCheckApply.projectLeader},
          #{extranetCheckApply.projectLeaderPhone},
          #{extranetCheckApply.projectLeaderMail},
          #{extranetCheckApply.postalAddress},
          #{extranetCheckApply.agreementStartTime},
          #{extranetCheckApply.agreementEndTime},
          #{extranetCheckApply.applicationAcceptanceTime},
          #{extranetCheckApply.applicationAcceptanceMode},
          #{extranetCheckApply.applicationAcceptancePlace},
          #{extranetCheckApply.acceptanceContact},
          #{extranetCheckApply.acceptanceContactPhone},
          #{extranetCheckApply.mainContentSituation},
          #{extranetCheckApply.submissionAchievementsSituation},
          #{extranetCheckApply.subjectUndertakingUnitOpinion},
          #{extranetCheckApply.environmentalDepartmentsOpinion},
          #{extranetCheckApply.provinceAssessmentCenterOpinion},
          #{extranetCheckApply.competentDepartmentOinion},
          #{extranetCheckApply.submitInventory},
          #{extranetCheckApply.acceptancePhaseId},
          #{extranetCheckApply.createTime},
          #{extranetCheckApply.createAuthor},
          #{extranetCheckApply.applicationUrlId},
          #{extranetCheckApply.isOutcome}
        );
    </insert>

    <insert id="insertCheckApplyState" useGeneratedKeys="true" keyProperty="id">
      insert into check_apply_state(
      check_apply_id,
      fist_handler,
      audit_step,
      first_handle_time,
      state)
      values (
      #{extranetCheckApplyState.checkApplyId},
      #{extranetCheckApplyState.fistHandler},
      #{extranetCheckApplyState.auditStep},
      #{extranetCheckApplyState.firstHandleTime},
      #{extranetCheckApplyState.state}
      )
    </insert>

    <select id="queryAcceptApply" resultType="com.xdmd.IntranetEnvironment.extranetSubjectAcceptance.pojo.ExtranetCheckApply">
        select * from check_apply
        <where>
            <if test="topicName != null">
                topic_name like CONCAT('%',#{topicName},'%')
            </if>
            <if test="topicNumber != null">
                and topic_number like CONCAT ('%',#{topicNumber},'%')
            </if>
            <if test="0 == 0">
                and subject_undertaking_unit_id = #{cid} and acceptance_phase_id in(1,2,3,4,5,6,7,8,9)
            </if>
        </where>
        order by create_time desc
        limit #{page},#{total};
    </select>

    <select id="queryAllExpert" resultType="Integer">
        select count(*) from check_apply
        <where>
            <if test="topicName != null ">
                topic_name like CONCAT ('%',#{topicName},'%')
            </if>
            <if test="topicNumber != null">
                and topic_number like CONCAT ('%',#{topicNumber},'%')
            </if>
            <if test="0 == 0">
                and subject_undertaking_unit_id = #{cid} and acceptance_phase_id in(1,2,3,4,5,6,7,8,9)
            </if>
        </where>
    </select>

    <select id="queryCheckApplyState" resultType="com.xdmd.IntranetEnvironment.extranetSubjectAcceptance.pojo.ExtranetCheckApplyState">
        select * from check_apply_state
        where check_apply_id = #{id}
    </select>


    <select id="queryAllResultCheckApply" resultType="Integer">
        select count(*) from check_apply
        <where>
            <if test="topicName != null ">
                topic_name like CONCAT ('%',#{topicName},'%')
            </if>
            <if test="topicNumber != null">
                and topic_number like CONCAT ('%',#{topicNumber},'%')
            </if>
            <if test="0 == 0">
                and subject_undertaking_unit_id = #{cid} and acceptance_phase_id in(77,88,99)
            </if>
        </where>
    </select>

    <select id="queryResultCheckApply" resultType="com.xdmd.IntranetEnvironment.extranetSubjectAcceptance.pojo.ExtranetCheckApply">
        select * from check_apply
        <where>
            <if test="topicName != null ">
                topic_name like CONCAT ('%',#{topicName},'%')
            </if>
            <if test="topicNumber != null">
                and topic_number like CONCAT ('%',#{topicNumber},'%')
            </if>
            <if test="0 == 0">
                and subject_undertaking_unit_id = #{cid} and acceptance_phase_id in(77,88,99)
            </if>
        </where>
        order by create_time desc
        limit #{page},#{total}
    </select>

    <insert id="addExpertGroupComment" useGeneratedKeys="true" keyProperty="egcId">
        INSERT INTO expert_group_comments (
            egc_id,
            ca_id,
            topic_name,
            topic_number,
            project_leader,
            subject_undertaking_unit,
            acceptance_expert_number,
            expert_one_grade,
            expert_two_grade,
            expert_three_grade,
            expert_four_grade,
            expert_five_grade,
            expert_six_grade,
            expert_seven_grade,
            synthesize_grade,
            topic_overall_evaluation,
            suggest,
            acceptance_conclusion_id,
            expert_leader,
            write_date,
            create_time,
            create_author)
        VALUES(
            #{extranetExpertGroupComment.egcId},
            #{extranetExpertGroupComment.caId},
            #{extranetExpertGroupComment.topicName},
            #{extranetExpertGroupComment.topicNumber},
            #{extranetExpertGroupComment.projectLeader},
            #{extranetExpertGroupComment.subjectUndertakingUnit},
            #{extranetExpertGroupComment.acceptanceExpertNumber},
            #{extranetExpertGroupComment.expertOneGrade},
            #{extranetExpertGroupComment.expertTwoGrade},
            #{extranetExpertGroupComment.expertThreeGrade},
            #{extranetExpertGroupComment.expertFourGrade},
            #{extranetExpertGroupComment.expertFiveGrade},
            #{extranetExpertGroupComment.expertSixGrade},
            #{extranetExpertGroupComment.expertSevenGrade},
            #{extranetExpertGroupComment.synthesizeGrade},
            #{extranetExpertGroupComment.topicOverallEvaluation},
            #{extranetExpertGroupComment.suggest},
            #{extranetExpertGroupComment.acceptanceConclusionId},
            #{extranetExpertGroupComment.expertLeader},
            #{extranetExpertGroupComment.writeDate},
            #{extranetExpertGroupComment.createTime},
            #{extranetExpertGroupComment.createAuthor}
            );
    </insert>

    <insert id="addExpertGroupCommentName">
        insert into expert_group_comments_name(
            egc_nid,
            egc_id,
            expert_name,
            company_name,
            major,
            job)
        values(
            #{extranetExpertGroupCommentsName.egcNid},
            #{egcId},
            #{extranetExpertGroupCommentsName.expertName},
            #{extranetExpertGroupCommentsName.companyName},
            #{extranetExpertGroupCommentsName.major},
            #{extranetExpertGroupCommentsName.job}
        )
    </insert>

    <update id="updateCheckApply">
        update check_apply set
            id = #{extranetCheckApply.id},
            topic_name = #{extranetCheckApply.topicName},
            topic_number = #{extranetCheckApply.topicNumber},
            subject_undertaking_unit = #{extranetCheckApply.subjectUndertakingUnit},
            unit_nature = #{extranetCheckApply.unitNature},
            project_leader = #{extranetCheckApply.projectLeader},
            project_leader_phone = #{extranetCheckApply.projectLeaderPhone},
            project_leader_mail = #{extranetCheckApply.projectLeaderMail},
            postal_address = #{extranetCheckApply.postalAddress},
            agreement_start_time = #{extranetCheckApply.agreementStartTime},
            agreement_end_time = #{extranetCheckApply.agreementEndTime},
            application_acceptance_time = #{extranetCheckApply.applicationAcceptanceTime},
            application_acceptance_mode = #{extranetCheckApply.applicationAcceptanceMode},
            application_acceptance_place = #{extranetCheckApply.applicationAcceptancePlace},
            acceptance_contact = #{extranetCheckApply.acceptanceContact},
            acceptance_contact_phone = #{extranetCheckApply.acceptanceContactPhone},
            main_content_situation = #{extranetCheckApply.mainContentSituation},
            submission_achievements_situation = #{extranetCheckApply.submissionAchievementsSituation},
            subject_undertaking_unit_opinion = #{extranetCheckApply.subjectUndertakingUnitOpinion},
            environmental_departments_opinion = #{extranetCheckApply.environmentalDepartmentsOpinion},
            province_assessment_center_opinion = #{extranetCheckApply.provinceAssessmentCenterOpinion},
            competent_department_oinion = #{extranetCheckApply.competentDepartmentOinion},
            submit_inventory  = #{extranetCheckApply.submitInventory}
        where id = #{extranetCheckApply.id}
    </update>

    <insert id="addAcceptanceCertificate" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO acceptance_certificate (
            id,
            cid,
            translate,
            topic_number,
            topic_name,
            completion_unit,
            acceptance_department,
            acceptance_time,
            unit_name,
            unit_nature,
            location,
            legal_representative,
            legal_representative_phone,
            contacts,
            contacts_phone,
            postal_code,
            mail,
            mailing_address,
            competent_department,
            project_start_time,
            project_completion_time,
            achievement_form,
            achievement_level,
            development_total_number,
            doctor_total_number,
            master_total_number,
            senior_total_number,
            intermediate_total_number,
            school_master_number,
            total_project_funds,
            environment_topic_funds,
            competent_department_match,
            bank_loans,
            unit_raise_money,
            other_actual_money,
            equipment_cost,
            material_fee,
            laboratory_fees,
            fuel_costs,
            travel_expenses,
            conference_fee,
            international_communication,
            expert_consult,
            management_expense,
            other_expenditure_money,
            new_output,
            new_sales_volume,
            new_profit_tax,
            exit_earn,
            main_solve_technology,
            main_completion,
            implementation_achievement,
            science_department_opinion,
            check_department_opinion,
            environment_office_opinion,
            total_expenditure
        )
        VALUES(
            #{acceptanceCertificate.id},
            #{acceptanceCertificate.cid},
            #{acceptanceCertificate.translate},
            #{acceptanceCertificate.topicNumber},
            #{acceptanceCertificate.topicName},
            #{acceptanceCertificate.completionUnit},
            #{acceptanceCertificate.acceptanceDepartment},
            #{acceptanceCertificate.acceptanceTime},
            #{acceptanceCertificate.unitName},
            #{acceptanceCertificate.unitNature},
            #{acceptanceCertificate.location},
            #{acceptanceCertificate.legalRepresentative},
            #{acceptanceCertificate.legalRepresentativePhone},
            #{acceptanceCertificate.contacts},
            #{acceptanceCertificate.contactsPhone},
            #{acceptanceCertificate.postalCode},
            #{acceptanceCertificate.mail},
            #{acceptanceCertificate.mailingAddress},
            #{acceptanceCertificate.competentDepartment},
            #{acceptanceCertificate.projectStartTime},
            #{acceptanceCertificate.projectCompletionTime},
            #{acceptanceCertificate.achievementForm},
            #{acceptanceCertificate.achievementLevel},
            #{acceptanceCertificate.developmentTotalNumber},
            #{acceptanceCertificate.doctorTotalNumber},
            #{acceptanceCertificate.masterTotalNumber},
            #{acceptanceCertificate.seniorTotalNumber},
            #{acceptanceCertificate.intermediateTotalNumber},
            #{acceptanceCertificate.schoolMasterNumber},
            #{acceptanceCertificate.totalProjectFunds},
            #{acceptanceCertificate.environmentTopicFunds},
            #{acceptanceCertificate.competentDepartmentMatch},
            #{acceptanceCertificate.bankLoans},
            #{acceptanceCertificate.unitRaiseMoney},
            #{acceptanceCertificate.otherActualMoney},
            #{acceptanceCertificate.equipmentCost},
            #{acceptanceCertificate.materialFee},
            #{acceptanceCertificate.laboratoryFees},
            #{acceptanceCertificate.fuelCosts},
            #{acceptanceCertificate.travelExpenses},
            #{acceptanceCertificate.conferenceFee},
            #{acceptanceCertificate.internationalCommunication},
            #{acceptanceCertificate.expertConsult},
            #{acceptanceCertificate.managementExpense},
            #{acceptanceCertificate.otherExpenditureMoney},
            #{acceptanceCertificate.newOutput},
            #{acceptanceCertificate.newSalesVolume},
            #{acceptanceCertificate.newProfitTax},
            #{acceptanceCertificate.exitEarn},
            #{acceptanceCertificate.mainSolveTechnology},
            #{acceptanceCertificate.mainCompletion},
            #{acceptanceCertificate.implementationAchievement},
            #{acceptanceCertificate.scienceDepartmentOpinion},
            #{acceptanceCertificate.checkDepartmentOpinion},
            #{acceptanceCertificate.environmentOfficeOpinion},
            #{acceptanceCertificate.totalExpenditure}
        );
    </insert>

    <insert id="addAcceptanceCertificatePatent">
        INSERT INTO acceptance_certificate_patent (
            acceptance_certificate_id,
            application_invention,
            use_new_type,
            patent_appearance,
            patent_invention,
            empower_new_type,
            empower_appearance_design,
            paper_number,
            science_indexe,
            engineer_index,
            publish_work,
            technical_standard,
            new_product,
            policy_system,
            new_device,
            new_technology
        )
        VALUES(
            #{acceptanceCertificatePatent.acceptanceCertificateId},
            #{acceptanceCertificatePatent.applicationInvention},
            #{acceptanceCertificatePatent.useNewType},
            #{acceptanceCertificatePatent.patentAppearance},
            #{acceptanceCertificatePatent.patentInvention},
            #{acceptanceCertificatePatent.empowerNewType},
            #{acceptanceCertificatePatent.empowerAppearanceDesign},
            #{acceptanceCertificatePatent.paperNumber},
            #{acceptanceCertificatePatent.scienceIndexe},
            #{acceptanceCertificatePatent.engineerIndex},
            #{acceptanceCertificatePatent.publishWork},
            #{acceptanceCertificatePatent.technicalStandard},
            #{acceptanceCertificatePatent.newProduct},
            #{acceptanceCertificatePatent.policySystem},
            #{acceptanceCertificatePatent.newDevice},
            #{acceptanceCertificatePatent.newTechnology}
        );
    </insert>

    <insert id="addAcceptanceCertificatePrincipalPersonnel">
        INSERT INTO acceptance_certificate_principal_personnel (
            id,
            acceptance_certificate_id,
            participant_name,
            participant_sex,
            participant_birth_date,
            participant_technical_title,
            participant_education,
            participant_work_unit,
            task_taking)
        VALUES(
            #{acceptanceCertificatePrincipalPersonnel.id},
            #{acceptanceCertificatePrincipalPersonnel.acceptanceCertificateId},
            #{acceptanceCertificatePrincipalPersonnel.participantName},
            #{acceptanceCertificatePrincipalPersonnel.participantSex},
            #{acceptanceCertificatePrincipalPersonnel.participantBirthDate},
            #{acceptanceCertificatePrincipalPersonnel.participantTechnicalTitle},
            #{acceptanceCertificatePrincipalPersonnel.participantEducation},
            #{acceptanceCertificatePrincipalPersonnel.participantWorkUnit},
            #{acceptanceCertificatePrincipalPersonnel.taskTaking}
        );
    </insert>

    <insert id="addAcceptanceCertificateSubjectPeople">
        INSERT INTO acceptance_certificate_subject_people(
            id,
            acceptance_certificate_id,
            name,
            sex,
            birth_date,
            major,
            education,
            title,
            phone )
        VALUES(
            #{acceptanceCertificateSubjectPeople.id},
            #{acceptanceCertificateSubjectPeople.acceptanceCertificateId},
            #{acceptanceCertificateSubjectPeople.name},
            #{acceptanceCertificateSubjectPeople.sex},
            #{acceptanceCertificateSubjectPeople.birthDate},
            #{acceptanceCertificateSubjectPeople.major},
            #{acceptanceCertificateSubjectPeople.education},
            #{acceptanceCertificateSubjectPeople.title},
            #{acceptanceCertificateSubjectPeople.phone}
        );
    </insert>

    <update id="updateExpertGroupByCaId">
        update expert_group_comments set
            topic_name = #{extranetExpertGroupComment.topicName},
            topic_number = #{extranetExpertGroupComment.topicNumber},
            project_leader = #{extranetExpertGroupComment.projectLeader},
            subject_undertaking_unit = #{extranetExpertGroupComment.subjectUndertakingUnit},
            acceptance_expert_number = #{extranetExpertGroupComment.acceptanceExpertNumber},
            expert_one_grade = #{extranetExpertGroupComment.expertOneGrade},
            expert_two_grade = #{extranetExpertGroupComment.expertTwoGrade},
            expert_three_grade = #{extranetExpertGroupComment.expertThreeGrade},
            expert_four_grade = #{extranetExpertGroupComment.expertFourGrade},
            expert_five_grade = #{extranetExpertGroupComment.expertFiveGrade},
            expert_six_grade = #{extranetExpertGroupComment.expertSixGrade},
            expert_seven_grade = #{extranetExpertGroupComment.expertSevenGrade},
            synthesize_grade = #{extranetExpertGroupComment.synthesizeGrade},
            topic_overall_evaluation = #{extranetExpertGroupComment.topicOverallEvaluation},
            suggest = #{extranetExpertGroupComment.suggest},
            acceptance_conclusion_id = #{extranetExpertGroupComment.acceptanceConclusionId},
            expert_leader = #{extranetExpertGroupComment.expertLeader},
            write_date = #{extranetExpertGroupComment.writeDate}
        where ca_id = #{caId}
    </update>

    <update id="UpdateLastReportFile">
        update acceptance_certificate set
            translate = #{acceptanceCertificate.translate},
            topic_number = #{acceptanceCertificate.topicNumber},
            topic_name = #{acceptanceCertificate.topicName},
            completion_unit = #{acceptanceCertificate.completionUnit},
            acceptance_department = #{acceptanceCertificate.acceptanceDepartment},
            acceptance_time = #{acceptanceCertificate.acceptanceTime},
            unit_name = #{acceptanceCertificate.unitName},
            unit_nature = #{acceptanceCertificate.unitNature},
            location = #{acceptanceCertificate.location},
            legal_representative = #{acceptanceCertificate.legalRepresentative},
            legal_representative_phone = #{acceptanceCertificate.legalRepresentativePhone},
            contacts = #{acceptanceCertificate.contacts},
            contacts_phone = #{acceptanceCertificate.contactsPhone},
            postal_code = #{acceptanceCertificate.postalCode},
            mail = #{acceptanceCertificate.mail},
            mailing_address = #{acceptanceCertificate.mailingAddress},
            competent_department = #{acceptanceCertificate.competentDepartment},
            project_start_time = #{acceptanceCertificate.projectStartTime},
            project_completion_time = #{acceptanceCertificate.projectCompletionTime},
            achievement_form = #{acceptanceCertificate.achievementForm},
            achievement_level = #{acceptanceCertificate.achievementLevel},
            development_total_number = #{acceptanceCertificate.developmentTotalNumber},
            doctor_total_number = #{acceptanceCertificate.doctorTotalNumber},
            master_total_number = #{acceptanceCertificate.masterTotalNumber},
            senior_total_number = #{acceptanceCertificate.seniorTotalNumber},
            intermediate_total_number = #{acceptanceCertificate.intermediateTotalNumber},
            school_master_number = #{acceptanceCertificate.schoolMasterNumber},
            total_project_funds = #{acceptanceCertificate.totalProjectFunds},
            environment_topic_funds = #{acceptanceCertificate.environmentTopicFunds},
            competent_department_match = #{acceptanceCertificate.competentDepartmentMatch},
            bank_loans = #{acceptanceCertificate.bankLoans},
            unit_raise_money = #{acceptanceCertificate.unitRaiseMoney},
            other_actual_money = #{acceptanceCertificate.otherActualMoney},
            equipment_cost = #{acceptanceCertificate.equipmentCost},
            material_fee = #{acceptanceCertificate.materialFee},
            laboratory_fees = #{acceptanceCertificate.laboratoryFees},
            fuel_costs = #{acceptanceCertificate.fuelCosts},
            travel_expenses = #{acceptanceCertificate.travelExpenses},
            conference_fee = #{acceptanceCertificate.conferenceFee},
            international_communication = #{acceptanceCertificate.internationalCommunication},
            expert_consult = #{acceptanceCertificate.expertConsult},
            management_expense = #{acceptanceCertificate.managementExpense},
            other_expenditure_money = #{acceptanceCertificate.otherExpenditureMoney},
            new_output = #{acceptanceCertificate.newOutput},
            new_sales_volume = #{acceptanceCertificate.newSalesVolume},
            new_profit_tax = #{acceptanceCertificate.newProfitTax},
            exit_earn = #{acceptanceCertificate.exitEarn},
            main_solve_technology = #{acceptanceCertificate.mainSolveTechnology},
            main_completion = #{acceptanceCertificate.mainCompletion},
            implementation_achievement = #{acceptanceCertificate.implementationAchievement},
            science_department_opinion = #{acceptanceCertificate.scienceDepartmentOpinion},
            check_department_opinion = #{acceptanceCertificate.checkDepartmentOpinion},
            environment_office_opinion = #{acceptanceCertificate.environmentOfficeOpinion},
            total_expenditure = #{acceptanceCertificate.totalExpenditure}
        where cid = #{caId}
    </update>


    <select id="queryNewCompanyContractManage" resultType="com.xdmd.IntranetEnvironment.extranetSubjectAcceptance.pojo.SubjectInformation">
        SELECT
          id,
          project_no,
          subject_name,
          contract_start_time,
          contract_end_time,
          subjece_leader,
          subject_leader_phone,
          email,
          commitment_Unit,
          commitment_unit_address
        FROM contract_manage
        <where>
            <if test="topicName != null">
                subject_name like CONCAT ('%',#{topicName},'%')
            </if>
            <if test="topicNumber != null">
                and project_no like CONCAT ('%',#{topicNumber},'%')
            </if>
            <if test="0==0">
                and #{nowTime} >contract_end_time and commitment_Unit = #{cname} and is_check_apply = 0
            </if>
        </where>
    </select>

    <select id="queryCompanyContractManageInformation" resultType="com.xdmd.IntranetEnvironment.extranetSubjectAcceptance.pojo.SubjectInformation">
        SELECT
            id,
            project_no,
            subject_name,
            contract_start_time,
            contract_end_time,
            subjece_leader,
            subject_leader_phone,
            email,
            commitment_Unit,
            commitment_unit_address
        FROM contract_manage
        where
            #{nowTime} >contract_end_time
            and commitment_Unit = #{cname}
            and is_check_apply = 0
        limit #{newPage},#{total}
    </select>
</mapper>